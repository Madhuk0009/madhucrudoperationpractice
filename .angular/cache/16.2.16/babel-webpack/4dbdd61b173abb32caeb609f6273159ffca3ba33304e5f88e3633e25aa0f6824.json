{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../api.service\";\nimport * as i3 from \"@angular/common\";\nfunction DashboardComponent_tr_30_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\")(6, \"button\", 23);\n    i0.ɵɵlistener(\"click\", function DashboardComponent_tr_30_Template_button_click_6_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r4);\n      const item_r2 = restoredCtx.$implicit;\n      const ctx_r3 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r3.onEditItem(item_r2));\n    });\n    i0.ɵɵtext(7, \"Edit\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"button\", 24);\n    i0.ɵɵlistener(\"click\", function DashboardComponent_tr_30_Template_button_click_8_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r4);\n      const item_r2 = restoredCtx.$implicit;\n      const ctx_r5 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r5.deleteitems(item_r2.id));\n    });\n    i0.ɵɵtext(9, \"Delete\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const item_r2 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(item_r2.id);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(item_r2.name);\n  }\n}\nconst _c0 = function (a0) {\n  return {\n    \"is-invalid\": a0\n  };\n};\nfunction DashboardComponent_div_31_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r7 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 2)(1, \"div\", 25);\n    i0.ɵɵtext(2, \"Edit Item\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"div\", 4)(4, \"form\", 5);\n    i0.ɵɵlistener(\"ngSubmit\", function DashboardComponent_div_31_Template_form_ngSubmit_4_listener() {\n      i0.ɵɵrestoreView(_r7);\n      const ctx_r6 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r6.onUpdateItem());\n    });\n    i0.ɵɵelementStart(5, \"div\", 6)(6, \"label\", 26);\n    i0.ɵɵtext(7, \"Item Name\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(8, \"input\", 27);\n    i0.ɵɵelementStart(9, \"div\", 9);\n    i0.ɵɵtext(10, \"Item Name is required.\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(11, \"button\", 28);\n    i0.ɵɵtext(12, \" Update Item \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(13, \"button\", 29);\n    i0.ɵɵlistener(\"click\", function DashboardComponent_div_31_Template_button_click_13_listener() {\n      i0.ɵɵrestoreView(_r7);\n      const ctx_r8 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r8.cancelEdit());\n    });\n    i0.ɵɵtext(14, \"Cancel\");\n    i0.ɵɵelementEnd()()()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    let tmp_1_0;\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"formGroup\", ctx_r1.editItemForm);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(3, _c0, ((tmp_1_0 = ctx_r1.editItemForm.get(\"itemName\")) == null ? null : tmp_1_0.touched) && ((tmp_1_0 = ctx_r1.editItemForm.get(\"itemName\")) == null ? null : tmp_1_0.invalid)));\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"disabled\", ctx_r1.editItemForm.invalid);\n  }\n}\nexport class DashboardComponent {\n  constructor(fb, madhu, kumar) {\n    this.fb = fb;\n    this.madhu = madhu;\n    this.kumar = kumar;\n    this.getmethod = [];\n    this.selectedItem = null;\n    this.addItemForm = this.fb.group({\n      itemName: ['', Validators.required]\n    });\n    this.editItemForm = this.fb.group({\n      itemName: ['', Validators.required]\n    });\n  }\n  Obseravablemethod() {\n    this.kumar.Observable$.subscribe(res => {\n      this.Obser1 = res;\n    });\n  }\n  save() {\n    this.kumar.Observable$.next(this.savedata);\n  }\n  ngOnInit() {\n    this.getitems();\n    this.Obseravablemethod();\n  }\n  getitems() {\n    this.madhu.getusers().subscribe(res => {\n      this.getmethod = res;\n    });\n  }\n  onAddItem() {\n    const newItem = {\n      name: this.addItemForm.value.itemName\n    };\n    this.madhu.postusers(newItem).subscribe(() => {\n      this.getitems();\n      this.addItemForm.reset();\n    });\n  }\n  onEditItem(item) {\n    this.selectedItem = item;\n    this.editItemForm.patchValue({\n      itemName: item.name\n    });\n  }\n  onUpdateItem() {\n    if (this.selectedItem && typeof this.selectedItem.id === 'string') {\n      const updatedItem = {\n        name: this.editItemForm.value.itemName\n      };\n      this.madhu.putusers(this.selectedItem.id, updatedItem).subscribe(() => {\n        this.getitems();\n        this.selectedItem = null;\n      });\n    } else {\n      console.error('Invalid selectedItem or ID is not a number');\n    }\n  }\n  cancelEdit() {\n    this.selectedItem = null;\n  }\n  deleteitems(id) {\n    this.madhu.deleteusers(id).subscribe(() => {\n      this.getitems();\n    });\n  }\n  static {\n    this.ɵfac = function DashboardComponent_Factory(t) {\n      return new (t || DashboardComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.ApiService), i0.ɵɵdirectiveInject(i2.ApiService));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: DashboardComponent,\n      selectors: [[\"app-dashboard\"]],\n      decls: 47,\n      vars: 9,\n      consts: [[1, \"container\", \"mt-5\"], [1, \"text-center\", \"mb-4\"], [1, \"card\", \"mb-4\"], [1, \"card-header\", \"bg-primary\", \"text-white\"], [1, \"card-body\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"mb-3\"], [\"for\", \"addItem\", 1, \"form-label\"], [\"type\", \"text\", \"id\", \"addItem\", \"formControlName\", \"itemName\", 1, \"form-control\", 3, \"ngClass\"], [1, \"invalid-feedback\"], [\"type\", \"submit\", 1, \"btn\", \"btn-success\", 3, \"disabled\"], [1, \"card-header\", \"bg-secondary\", \"text-white\"], [1, \"table\", \"table-bordered\", \"table-striped\"], [4, \"ngFor\", \"ngForOf\"], [\"class\", \"card mb-4\", 4, \"ngIf\"], [1, \"container\"], [1, \"row\", \"justify-content-center\", \"mt-5\"], [1, \"col-md-6\"], [1, \"text-center\"], [1, \"alert\", \"alert-info\", \"text-center\"], [\"for\", \"savedata\", 1, \"form-label\"], [\"type\", \"text\", \"id\", \"savedata\", \"placeholder\", \"Enter a new value\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [1, \"btn\", \"btn-primary\", \"w-100\", 3, \"click\"], [1, \"btn\", \"btn-warning\", \"btn-sm\", \"me-2\", 3, \"click\"], [1, \"btn\", \"btn-danger\", \"btn-sm\", 3, \"click\"], [1, \"card-header\", \"bg-info\", \"text-white\"], [\"for\", \"editItem\", 1, \"form-label\"], [\"type\", \"text\", \"id\", \"editItem\", \"formControlName\", \"itemName\", 1, \"form-control\", 3, \"ngClass\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", 3, \"disabled\"], [\"type\", \"button\", 1, \"btn\", \"btn-secondary\", \"ms-2\", 3, \"click\"]],\n      template: function DashboardComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"h2\", 1);\n          i0.ɵɵtext(2, \"Item Management Dashboard\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(3, \"div\", 2)(4, \"div\", 3);\n          i0.ɵɵtext(5, \"Add Item\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(6, \"div\", 4)(7, \"form\", 5);\n          i0.ɵɵlistener(\"ngSubmit\", function DashboardComponent_Template_form_ngSubmit_7_listener() {\n            return ctx.onAddItem();\n          });\n          i0.ɵɵelementStart(8, \"div\", 6)(9, \"label\", 7);\n          i0.ɵɵtext(10, \"Item Name\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(11, \"input\", 8);\n          i0.ɵɵelementStart(12, \"div\", 9);\n          i0.ɵɵtext(13, \"Item Name is required.\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(14, \"button\", 10);\n          i0.ɵɵtext(15, \" Add Item \");\n          i0.ɵɵelementEnd()()()();\n          i0.ɵɵelementStart(16, \"div\", 2)(17, \"div\", 11);\n          i0.ɵɵtext(18, \"Items List\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(19, \"div\", 4)(20, \"table\", 12)(21, \"thead\")(22, \"tr\")(23, \"th\");\n          i0.ɵɵtext(24, \"ID\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(25, \"th\");\n          i0.ɵɵtext(26, \"Item Name\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(27, \"th\");\n          i0.ɵɵtext(28, \"Actions\");\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelementStart(29, \"tbody\");\n          i0.ɵɵtemplate(30, DashboardComponent_tr_30_Template, 10, 2, \"tr\", 13);\n          i0.ɵɵelementEnd()()()();\n          i0.ɵɵtemplate(31, DashboardComponent_div_31_Template, 15, 5, \"div\", 14);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(32, \"div\", 15)(33, \"div\", 16)(34, \"div\", 17)(35, \"h2\", 18);\n          i0.ɵɵtext(36, \"Observable Concept with Angular\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(37, \"div\", 19)(38, \"strong\");\n          i0.ɵɵtext(39, \"Current Observable Value:\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵtext(40);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(41, \"div\", 6)(42, \"label\", 20);\n          i0.ɵɵtext(43, \"Enter new value for Observable\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(44, \"input\", 21);\n          i0.ɵɵlistener(\"ngModelChange\", function DashboardComponent_Template_input_ngModelChange_44_listener($event) {\n            return ctx.avedata = $event;\n          });\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(45, \"button\", 22);\n          i0.ɵɵlistener(\"click\", function DashboardComponent_Template_button_click_45_listener() {\n            return ctx.Save();\n          });\n          i0.ɵɵtext(46, \"Save\");\n          i0.ɵɵelementEnd()()()();\n        }\n        if (rf & 2) {\n          let tmp_1_0;\n          i0.ɵɵadvance(7);\n          i0.ɵɵproperty(\"formGroup\", ctx.addItemForm);\n          i0.ɵɵadvance(4);\n          i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(7, _c0, ((tmp_1_0 = ctx.addItemForm.get(\"itemName\")) == null ? null : tmp_1_0.touched) && ((tmp_1_0 = ctx.addItemForm.get(\"itemName\")) == null ? null : tmp_1_0.invalid)));\n          i0.ɵɵadvance(3);\n          i0.ɵɵproperty(\"disabled\", ctx.addItemForm.invalid);\n          i0.ɵɵadvance(16);\n          i0.ɵɵproperty(\"ngForOf\", ctx.getmethod);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", ctx.selectedItem);\n          i0.ɵɵadvance(9);\n          i0.ɵɵtextInterpolate1(\" \", ctx.Obser1, \" \");\n          i0.ɵɵadvance(4);\n          i0.ɵɵproperty(\"ngModel\", ctx.avedata);\n        }\n      },\n      dependencies: [i3.NgClass, i3.NgForOf, i3.NgIf, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.NgModel, i1.FormGroupDirective, i1.FormControlName],\n      styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n    });\n  }\n}","map":{"version":3,"names":["Validators","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","DashboardComponent_tr_30_Template_button_click_6_listener","restoredCtx","ɵɵrestoreView","_r4","item_r2","$implicit","ctx_r3","ɵɵnextContext","ɵɵresetView","onEditItem","DashboardComponent_tr_30_Template_button_click_8_listener","ctx_r5","deleteitems","id","ɵɵadvance","ɵɵtextInterpolate","name","DashboardComponent_div_31_Template_form_ngSubmit_4_listener","_r7","ctx_r6","onUpdateItem","ɵɵelement","DashboardComponent_div_31_Template_button_click_13_listener","ctx_r8","cancelEdit","ɵɵproperty","ctx_r1","editItemForm","ɵɵpureFunction1","_c0","tmp_1_0","get","touched","invalid","DashboardComponent","constructor","fb","madhu","kumar","getmethod","selectedItem","addItemForm","group","itemName","required","Obseravablemethod","Observable$","subscribe","res","Obser1","save","next","savedata","ngOnInit","getitems","getusers","onAddItem","newItem","value","postusers","reset","item","patchValue","updatedItem","putusers","console","error","deleteusers","ɵɵdirectiveInject","i1","FormBuilder","i2","ApiService","selectors","decls","vars","consts","template","DashboardComponent_Template","rf","ctx","DashboardComponent_Template_form_ngSubmit_7_listener","ɵɵtemplate","DashboardComponent_tr_30_Template","DashboardComponent_div_31_Template","DashboardComponent_Template_input_ngModelChange_44_listener","$event","avedata","DashboardComponent_Template_button_click_45_listener","Save","ɵɵtextInterpolate1"],"sources":["F:\\crud-1\\madhucrudoperationpractice\\src\\app\\dashboard\\dashboard.component.ts","F:\\crud-1\\madhucrudoperationpractice\\src\\app\\dashboard\\dashboard.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { ApiService } from '../api.service';\r\n\r\n@Component({\r\n  selector: 'app-dashboard',\r\n  templateUrl: './dashboard.component.html',\r\n  styleUrls: ['./dashboard.component.scss']\r\n})\r\nexport class DashboardComponent implements OnInit {\r\n\r\n  \r\n  getmethod: any = [];\r\n  addItemForm: FormGroup;\r\n  editItemForm: FormGroup;\r\n  selectedItem: any = null;\r\n\r\n\r\n\r\n  constructor(private fb: FormBuilder, private madhu: ApiService, private kumar:ApiService) {\r\n    this.addItemForm = this.fb.group({\r\n      itemName: ['', Validators.required],\r\n    });\r\n\r\n    this.editItemForm = this.fb.group({\r\n      itemName: ['', Validators.required],\r\n    });\r\n  }\r\n  \r\n  Obser1:any;\r\n  Obseravablemethod(){\r\n    this.kumar.Observable$.subscribe(res=>{\r\n      this.Obser1=res;\r\n    });\r\n  }\r\n \r\n  savedata:any;\r\n  save(){\r\n    this.kumar.Observable$.next(this.savedata)\r\n  }\r\n\r\n\r\n  ngOnInit() {\r\n    this.getitems();\r\n    this.Obseravablemethod();\r\n  }\r\n\r\n  getitems() {\r\n    this.madhu.getusers().subscribe((res) => {\r\n      this.getmethod = res;\r\n    });\r\n  }\r\n\r\n  onAddItem() {\r\n    const newItem = { name: this.addItemForm.value.itemName };\r\n    this.madhu.postusers(newItem).subscribe(() => {\r\n      this.getitems();\r\n      this.addItemForm.reset();\r\n    });\r\n  }\r\n\r\n  onEditItem(item: any) {\r\n    this.selectedItem = item;\r\n    this.editItemForm.patchValue({ itemName: item.name });\r\n  }\r\n\r\n  onUpdateItem() {\r\n    if (this.selectedItem && typeof this.selectedItem.id === 'string') {\r\n      const updatedItem = { name: this.editItemForm.value.itemName };\r\n      this.madhu.putusers(this.selectedItem.id, updatedItem).subscribe(() => {\r\n        this.getitems();\r\n        this.selectedItem = null;\r\n      });\r\n    } else {\r\n      console.error('Invalid selectedItem or ID is not a number');\r\n    }\r\n  }\r\n  \r\n\r\n  cancelEdit() {\r\n    this.selectedItem = null;\r\n  }\r\n\r\n  deleteitems(id: any) {\r\n    this.madhu.deleteusers(id).subscribe(() => {\r\n      this.getitems();\r\n    });\r\n  }\r\n\r\n}\r\n","<div class=\"container mt-5\">\r\n    <h2 class=\"text-center mb-4\">Item Management Dashboard</h2>\r\n  \r\n    <!-- Add Item Form -->\r\n    <div class=\"card mb-4\">\r\n      <div class=\"card-header bg-primary text-white\">Add Item</div>\r\n      <div class=\"card-body\">\r\n        <form [formGroup]=\"addItemForm\" (ngSubmit)=\"onAddItem()\">\r\n          <div class=\"mb-3\">\r\n            <label for=\"addItem\" class=\"form-label\">Item Name</label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"addItem\"\r\n              formControlName=\"itemName\"\r\n              class=\"form-control\"\r\n              [ngClass]=\"{'is-invalid': addItemForm.get('itemName')?.touched && addItemForm.get('itemName')?.invalid}\"\r\n            />\r\n            <div class=\"invalid-feedback\">Item Name is required.</div>\r\n          </div>\r\n          <button type=\"submit\" class=\"btn btn-success\" [disabled]=\"addItemForm.invalid\">\r\n            Add Item\r\n          </button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  \r\n    <!-- Items List -->\r\n    <div class=\"card mb-4\">\r\n      <div class=\"card-header bg-secondary text-white\">Items List</div>\r\n      <div class=\"card-body\">\r\n        <table class=\"table table-bordered table-striped\">\r\n          <thead>\r\n            <tr>\r\n              <th>ID</th>\r\n              <th>Item Name</th>\r\n              <th>Actions</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr *ngFor=\"let item of getmethod\">\r\n              <td>{{ item.id }}</td>\r\n              <td>{{ item.name }}</td>\r\n              <td>\r\n                <button class=\"btn btn-warning btn-sm me-2\" (click)=\"onEditItem(item)\">Edit</button>\r\n                <button class=\"btn btn-danger btn-sm\" (click)=\"deleteitems(item.id)\">Delete</button>\r\n              </td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n  \r\n    <!-- Edit Item Form -->\r\n    <div *ngIf=\"selectedItem\" class=\"card mb-4\">\r\n      <div class=\"card-header bg-info text-white\">Edit Item</div>\r\n      <div class=\"card-body\">\r\n        <form [formGroup]=\"editItemForm\" (ngSubmit)=\"onUpdateItem()\">\r\n          <div class=\"mb-3\">\r\n            <label for=\"editItem\" class=\"form-label\">Item Name</label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"editItem\"\r\n              formControlName=\"itemName\"\r\n              class=\"form-control\"\r\n              [ngClass]=\"{'is-invalid': editItemForm.get('itemName')?.touched && editItemForm.get('itemName')?.invalid}\"\r\n            />\r\n            <div class=\"invalid-feedback\">Item Name is required.</div>\r\n          </div>\r\n          <button type=\"submit\" class=\"btn btn-primary\" [disabled]=\"editItemForm.invalid\">\r\n            Update Item\r\n          </button>\r\n          <button type=\"button\" class=\"btn btn-secondary ms-2\" (click)=\"cancelEdit()\">Cancel</button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  </div>  \r\n\r\n  <!-- app.component.html -->\r\n<div class=\"container\">\r\n  <div class=\"row justify-content-center mt-5\">\r\n    <div class=\"col-md-6\">\r\n      <h2 class=\"text-center\">Observable Concept with Angular</h2>\r\n      \r\n      <!-- Display current Observable value -->\r\n      <div class=\"alert alert-info text-center\">\r\n        <strong>Current Observable Value:</strong> {{ Obser1 }}\r\n      </div>\r\n\r\n      <!-- Input field to save data to Observable -->\r\n      <div class=\"mb-3\">\r\n        <label for=\"savedata\" class=\"form-label\">Enter new value for Observable</label>\r\n        <input \r\n          type=\"text\" \r\n          id=\"savedata\" \r\n          class=\"form-control\" \r\n          [(ngModel)]=\"avedata\" \r\n          placeholder=\"Enter a new value\" \r\n        />\r\n      </div>\r\n\r\n      <!-- Button to trigger Save method -->\r\n      <button \r\n        class=\"btn btn-primary w-100\" \r\n        (click)=\"Save()\">Save</button>\r\n    </div>\r\n  </div>\r\n</div>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}